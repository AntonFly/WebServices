
package mypackage;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonWebService", targetNamespace = "http://controllers/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonWebService {


    /**
     * 
     * @param personName
     * @return
     *     returns java.util.List<mypackage.User>
     * @throws NoSuchUserException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersonsByName", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByName")
    @ResponseWrapper(localName = "getPersonsByNameResponse", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByNameResponse")
    @Action(input = "http://controllers/PersonWebService/getPersonsByNameRequest", output = "http://controllers/PersonWebService/getPersonsByNameResponse", fault = {
        @FaultAction(className = NoSuchUserException.class, value = "http://controllers/PersonWebService/getPersonsByName/Fault/NoSuchUserException")
    })
    public List<User> getPersonsByName(
        @WebParam(name = "personName", targetNamespace = "")
        String personName)
        throws NoSuchUserException
    ;

    /**
     * 
     * @return
     *     returns java.util.List<mypackage.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllPersons", targetNamespace = "http://controllers/", className = "mypackage.GetAllPersons")
    @ResponseWrapper(localName = "getAllPersonsResponse", targetNamespace = "http://controllers/", className = "mypackage.GetAllPersonsResponse")
    @Action(input = "http://controllers/PersonWebService/getAllPersonsRequest", output = "http://controllers/PersonWebService/getAllPersonsResponse")
    public List<User> getAllPersons();

    /**
     * 
     * @param password
     * @param phoneNumber
     * @param surname
     * @param name
     * @param email
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPearson", targetNamespace = "http://controllers/", className = "mypackage.CreatePearson")
    @ResponseWrapper(localName = "createPearsonResponse", targetNamespace = "http://controllers/", className = "mypackage.CreatePearsonResponse")
    @Action(input = "http://controllers/PersonWebService/createPearsonRequest", output = "http://controllers/PersonWebService/createPearsonResponse")
    public int createPearson(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname,
        @WebParam(name = "phoneNumber", targetNamespace = "")
        int phoneNumber,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param personName
     * @param personSurname
     * @return
     *     returns java.util.List<mypackage.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersonsByNameAndSurname", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByNameAndSurname")
    @ResponseWrapper(localName = "getPersonsByNameAndSurnameResponse", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByNameAndSurnameResponse")
    @Action(input = "http://controllers/PersonWebService/getPersonsByNameAndSurnameRequest", output = "http://controllers/PersonWebService/getPersonsByNameAndSurnameResponse")
    public List<User> getPersonsByNameAndSurname(
        @WebParam(name = "personName", targetNamespace = "")
        String personName,
        @WebParam(name = "personSurname", targetNamespace = "")
        String personSurname);

    /**
     * 
     * @param personEmail
     * @return
     *     returns java.util.List<mypackage.User>
     * @throws WrongEmailFormat
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersonsByEmail", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByEmail")
    @ResponseWrapper(localName = "getPersonsByEmailResponse", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByEmailResponse")
    @Action(input = "http://controllers/PersonWebService/getPersonsByEmailRequest", output = "http://controllers/PersonWebService/getPersonsByEmailResponse", fault = {
        @FaultAction(className = WrongEmailFormat.class, value = "http://controllers/PersonWebService/getPersonsByEmail/Fault/WrongEmailFormat")
    })
    public List<User> getPersonsByEmail(
        @WebParam(name = "personEmail", targetNamespace = "")
        String personEmail)
        throws WrongEmailFormat
    ;

    /**
     * 
     * @param personPhone
     * @return
     *     returns java.util.List<mypackage.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersonsByPhone", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByPhone")
    @ResponseWrapper(localName = "getPersonsByPhoneResponse", targetNamespace = "http://controllers/", className = "mypackage.GetPersonsByPhoneResponse")
    @Action(input = "http://controllers/PersonWebService/getPersonsByPhoneRequest", output = "http://controllers/PersonWebService/getPersonsByPhoneResponse")
    public List<User> getPersonsByPhone(
        @WebParam(name = "personPhone", targetNamespace = "")
        String personPhone);

    /**
     * 
     * @param password
     * @param phoneNumber
     * @param surname
     * @param name
     * @param id
     * @param email
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePearson", targetNamespace = "http://controllers/", className = "mypackage.UpdatePearson")
    @ResponseWrapper(localName = "updatePearsonResponse", targetNamespace = "http://controllers/", className = "mypackage.UpdatePearsonResponse")
    @Action(input = "http://controllers/PersonWebService/updatePearsonRequest", output = "http://controllers/PersonWebService/updatePearsonResponse")
    public String updatePearson(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname,
        @WebParam(name = "phoneNumber", targetNamespace = "")
        int phoneNumber,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePearson", targetNamespace = "http://controllers/", className = "mypackage.DeletePearson")
    @ResponseWrapper(localName = "deletePearsonResponse", targetNamespace = "http://controllers/", className = "mypackage.DeletePearsonResponse")
    @Action(input = "http://controllers/PersonWebService/deletePearsonRequest", output = "http://controllers/PersonWebService/deletePearsonResponse")
    public String deletePearson(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
